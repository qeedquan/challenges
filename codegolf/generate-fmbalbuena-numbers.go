/*

My user id is 106959

How to check if the number is Fmbalbuena number?

First Step: Check if the number of digits is a multiple of 3: 6 = 3 * 2

Second step: Split the digits into even thirds: 106959 -> 10 69 59

Third step: Subtract the first set of digits from the second modulo 10: 6 - 1 = 5, 9 - 0 = 9

Last step: Check that the result is the same as the third set of digits: 59 = 59

Sequence
Here is the sequence until 106959

109, 110, 121, 132, 143, 154, 165, 176, 187, 198, 208, 219, 220, 231, 242, 253, 264, 275, 286, 297, 307, 318, 329, 330, 341, 352, 363, 374, 385, 396, 406, 417, 428, 439, 440, 451, 462, 473, 484, 495, 505, 516, 527, 538, 549, 550, 561, 572, 583, 594, 604, 615, 626, 637, 648, 659, 660, 671, 682, 693, 703, 714, 725, 736, 747, 758, 769, 770, 781, 792, 802, 813, 824, 835, 846, 857, 868, 879, 880, 891, 901, 912, 923, 934, 945, 956, 967, 978, 989, 990, 100090, 100191, 100292, 100393, 100494, 100595, 100696, 100797, 100898, 100999, 101000, 101101, 101202, 101303, 101404, 101505, 101606, 101707, 101808, 101909, 102010, 102111, 102212, 102313, 102414, 102515, 102616, 102717, 102818, 102919, 103020, 103121, 103222, 103323, 103424, 103525, 103626, 103727, 103828, 103929, 104030, 104131, 104232, 104333, 104434, 104535, 104636, 104737, 104838, 104939, 105040, 105141, 105242, 105343, 105444, 105545, 105646, 105747, 105848, 105949, 106050, 106151, 106252, 106353, 106454, 106555, 106656, 106757, 106858, 106959
You can generate the first N numbers, infinite numbers, Check if the number is Fmbalbuena number or get Nth number of the sequence

Test cases

Truthy

106959
109
219
103222
666666000
777666999

Falsy

100
230
320
666666666
125466
1069592

*/

package main

import (
	"fmt"
	"math"
	"reflect"
)

func main() {
	tab := []uint{109, 110, 121, 132, 143, 154, 165, 176, 187, 198, 208, 219, 220, 231, 242, 253, 264, 275, 286, 297, 307, 318, 329, 330, 341, 352, 363, 374, 385, 396, 406, 417, 428, 439, 440, 451, 462, 473, 484, 495, 505, 516, 527, 538, 549, 550, 561, 572, 583, 594, 604, 615, 626, 637, 648, 659, 660, 671, 682, 693, 703, 714, 725, 736, 747, 758, 769, 770, 781, 792, 802, 813, 824, 835, 846, 857, 868, 879, 880, 891, 901, 912, 923, 934, 945, 956, 967, 978, 989, 990, 100090, 100191, 100292, 100393, 100494, 100595, 100696, 100797, 100898, 100999, 101000, 101101, 101202, 101303, 101404, 101505, 101606, 101707, 101808, 101909, 102010, 102111, 102212, 102313, 102414, 102515, 102616, 102717, 102818, 102919, 103020, 103121, 103222, 103323, 103424, 103525, 103626, 103727, 103828, 103929, 104030, 104131, 104232, 104333, 104434, 104535, 104636, 104737, 104838, 104939, 105040, 105141, 105242, 105343, 105444, 105545, 105646, 105747, 105848, 105949, 106050, 106151, 106252, 106353, 106454, 106555, 106656, 106757, 106858, 106959}

	truthy := []uint{106959, 109, 219, 103222, 666666000, 777666999}
	falsy := []uint{100, 230, 320, 666666666, 125466, 1069592}

	assert(reflect.DeepEqual(gen(len(tab)), tab))
	for _, x := range truthy {
		assert(fmbalbuena(x) == true)
	}
	for _, x := range falsy {
		assert(fmbalbuena(x) == false)
	}
}

func assert(x bool) {
	if !x {
		panic("assertion failed")
	}
}

func gen(n int) []uint {
	r := []uint{}
	for i := uint(0); len(r) < n && i < math.MaxUint; i++ {
		if fmbalbuena(i) {
			r = append(r, i)
		}
	}
	return r
}

func fmbalbuena(x uint) bool {
	s := fmt.Sprint(x)
	n := len(s)
	if n%3 != 0 {
		return false
	}

	n /= 3
	a := s[:n]
	b := s[n : 2*n]
	c := s[2*n:]
	for i := range a {
		d := mod(int(b[i])-int(a[i]), 10)
		if c[i]-'0' != byte(d) {
			return false
		}
	}
	return true
}

func mod(x, m int) int {
	x %= m
	if x < 0 {
		x += m
	}
	return x
}
