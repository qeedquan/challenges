/*

This idea is loosely based upon @TùxCräftîñg's chat message.

Take a look at the below example sequence:

INVALID0, INVALID1, INVALID2 INVALID3, INVALID4... INVALID9

After INVALID9, it goes on like this:

INVALI0, INVALI1, INVALI2, INVALI3... INVALI9

And after INVALI9, it's like this:

INVAL0,INVAL1, INVAL2, INVAL3... INVAL9

After, INVAL9, it's like this:

INVA0, INVA1, INVA2, INVA3, ... INVA9

Notice how we we kept removing a letter from the word INVALID each time.

You'll keep repeating this until you reach a single letter, that is, the letter I:

I0, I1, I2, I3, I4 ... I9

Now, your task is, to take an input of a word, and produce a sequence from it like the above example. Your code must also work with single letters, and in that case the resulting sequence will be shorter.

You may choose any input and output format that you prefer (with or without a separator, as you wish), but you must specify which one you have chosen.

The sequence needs to be in the exact specified order.

The shortest code, in bytes, that successfully completes this challenge, wins the challenge.

Full sequence in the above example:

INVALID0, INVALID1, INVALID2, INVALID3, INVALID4, INVALID5, INVALID6, INVALID7, INVALID8, INVALID9, INVALI0, INVALI1, INVALI2, INVALI3, INVALI4, INVALI5, INVALI6, INVALI7, INVALI8, INVALI9, INVAL0, INVAL1, INVAL2, INVAL3, INVAL4, INVAL5, INVAL6, INVAL7, INVAL8, INVAL9, INVA0, INVA1, INVA2, INVA3, INVA4, INVA5, INVA6, INVA7, INVA8, INVA9, INV0, INV1, INV2, INV3, INV4, INV5, INV6, INV7, INV8, INV9, IN0, IN1, IN2, IN3, IN4, IN5, IN6, IN7, IN8, IN9, I0, I1, I2, I3, I4, I5, I6, I7, I8, I9
Other examples:

Input: MAYBE (Uppercase and lowercase don't matter)

Output:

MAYBE0, MAYBE1, MAYBE2, MAYBE3, MAYBE4, MAYBE5, MAYBE6, MAYBE7, MAYBE8, MAYBE9, MAYB0, MAYB1, MAYB2, MAYB3, MAYB4, MAYB5, MAYB6, MAYB7, MAYB8, MAYB9, MAY0, MAY1, MAY2, MAY3, MAY4, MAY5, MAY6, MAY7, MAY8, MAY9, MA0, MA1, MA2, MA3, MA4, MA5, MA6, MA7, MA8, MA9, M0, M1, M2, M3, M4, M5, M6, M7, M8, M9
Input: AFTER

Output:

AFTER0, AFTER1, AFTER2, AFTER3, AFTER4, AFTER5, AFTER6, AFTER7, AFTER8, AFTER9, AFTE0, AFTE1, AFTE2, AFTE3, AFTE4, AFTE5, AFTE6, AFTE7, AFTE8, AFTE9, AFT0, AFT1, AFT2, AFT3, AFT4, AFT5, AFT6, AFT7, AFT8, AFT9, AF0, AF1, AF2, AF3, AF4, AF5, AF6, AF7, AF8, AF9, A0, A1, A2, A3, A4, A5, A6, A7, A8, A9
Input: WHAT ARE YOU DOING

WHAT ARE YOU DOING0, WHAT ARE YOU DOING1, WHAT ARE YOU DOING2, WHAT ARE YOU DOING3, WHAT ARE YOU DOING4, WHAT ARE YOU DOING5, WHAT ARE YOU DOING6, WHAT ARE YOU DOING7, WHAT ARE YOU DOING8, WHAT ARE YOU DOING9, WHAT ARE YOU DOIN0, WHAT ARE YOU DOIN1, WHAT ARE YOU DOIN2, WHAT ARE YOU DOIN3, WHAT ARE YOU DOIN4, WHAT ARE YOU DOIN5, WHAT ARE YOU DOIN6, WHAT ARE YOU DOIN7, WHAT ARE YOU DOIN8, WHAT ARE YOU DOIN9, WHAT ARE YOU DOI0, WHAT ARE YOU DOI1, WHAT ARE YOU DOI2, WHAT ARE YOU DOI3, WHAT ARE YOU DOI4, WHAT ARE YOU DOI5, WHAT ARE YOU DOI6, WHAT ARE YOU DOI7, WHAT ARE YOU DOI8, WHAT ARE YOU DOI9, WHAT ARE YOU DO0, WHAT ARE YOU DO1, WHAT ARE YOU DO2, WHAT ARE YOU DO3, WHAT ARE YOU DO4, WHAT ARE YOU DO5, WHAT ARE YOU DO6, WHAT ARE YOU DO7, WHAT ARE YOU DO8, WHAT ARE YOU DO9, WHAT ARE YOU D0, WHAT ARE YOU D1, WHAT ARE YOU D2, WHAT ARE YOU D3, WHAT ARE YOU D4, WHAT ARE YOU D5, WHAT ARE YOU D6, WHAT ARE YOU D7, WHAT ARE YOU D8, WHAT ARE YOU D9, WHAT ARE YOU 0, WHAT ARE YOU 1, WHAT ARE YOU 2, WHAT ARE YOU 3, WHAT ARE YOU 4, WHAT ARE YOU 5, WHAT ARE YOU 6, WHAT ARE YOU 7, WHAT ARE YOU 8, WHAT ARE YOU 9, WHAT ARE YOU0, WHAT ARE YOU1, WHAT ARE YOU2, WHAT ARE YOU3, WHAT ARE YOU4, WHAT ARE YOU5, WHAT ARE YOU6, WHAT ARE YOU7, WHAT ARE YOU8, WHAT ARE YOU9, WHAT ARE YO0, WHAT ARE YO1, WHAT ARE YO2, WHAT ARE YO3, WHAT ARE YO4, WHAT ARE YO5, WHAT ARE YO6, WHAT ARE YO7, WHAT ARE YO8, WHAT ARE YO9, WHAT ARE Y0, WHAT ARE Y1, WHAT ARE Y2, WHAT ARE Y3, WHAT ARE Y4, WHAT ARE Y5, WHAT ARE Y6, WHAT ARE Y7, WHAT ARE Y8, WHAT ARE Y9, WHAT ARE 0, WHAT ARE 1, WHAT ARE 2, WHAT ARE 3, WHAT ARE 4, WHAT ARE 5, WHAT ARE 6, WHAT ARE 7, WHAT ARE 8, WHAT ARE 9, WHAT ARE0, WHAT ARE1, WHAT ARE2, WHAT ARE3, WHAT ARE4, WHAT ARE5, WHAT ARE6, WHAT ARE7, WHAT ARE8, WHAT ARE9, WHAT AR0, WHAT AR1, WHAT AR2, WHAT AR3, WHAT AR4, WHAT AR5, WHAT AR6, WHAT AR7, WHAT AR8, WHAT AR9, WHAT A0, WHAT A1, WHAT A2, WHAT A3, WHAT A4, WHAT A5, WHAT A6, WHAT A7, WHAT A8, WHAT A9, WHAT 0, WHAT 1, WHAT 2, WHAT 3, WHAT 4, WHAT 5, WHAT 6, WHAT 7, WHAT 8, WHAT 9, WHAT0, WHAT1, WHAT2, WHAT3, WHAT4, WHAT5, WHAT6, WHAT7, WHAT8, WHAT9, WHA0, WHA1, WHA2, WHA3, WHA4, WHA5, WHA6, WHA7, WHA8, WHA9, WH0, WH1, WH2, WH3, WH4, WH5, WH6, WH7, WH8, WH9, W0, W1, W2, W3, W4, W5, W6, W7, W8, W9

*/

package main

import (
	"fmt"
	"reflect"
)

func main() {
	test("INVALID", []string{"INVALID0", "INVALID1", "INVALID2", "INVALID3", "INVALID4", "INVALID5", "INVALID6", "INVALID7", "INVALID8", "INVALID9", "INVALI0", "INVALI1", "INVALI2", "INVALI3", "INVALI4", "INVALI5", "INVALI6", "INVALI7", "INVALI8", "INVALI9", "INVAL0", "INVAL1", "INVAL2", "INVAL3", "INVAL4", "INVAL5", "INVAL6", "INVAL7", "INVAL8", "INVAL9", "INVA0", "INVA1", "INVA2", "INVA3", "INVA4", "INVA5", "INVA6", "INVA7", "INVA8", "INVA9", "INV0", "INV1", "INV2", "INV3", "INV4", "INV5", "INV6", "INV7", "INV8", "INV9", "IN0", "IN1", "IN2", "IN3", "IN4", "IN5", "IN6", "IN7", "IN8", "IN9", "I0", "I1", "I2", "I3", "I4", "I5", "I6", "I7", "I8", "I9"})
	test("MAYBE", []string{"MAYBE0", "MAYBE1", "MAYBE2", "MAYBE3", "MAYBE4", "MAYBE5", "MAYBE6", "MAYBE7", "MAYBE8", "MAYBE9", "MAYB0", "MAYB1", "MAYB2", "MAYB3", "MAYB4", "MAYB5", "MAYB6", "MAYB7", "MAYB8", "MAYB9", "MAY0", "MAY1", "MAY2", "MAY3", "MAY4", "MAY5", "MAY6", "MAY7", "MAY8", "MAY9", "MA0", "MA1", "MA2", "MA3", "MA4", "MA5", "MA6", "MA7", "MA8", "MA9", "M0", "M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9"})
	test("AFTER", []string{"AFTER0", "AFTER1", "AFTER2", "AFTER3", "AFTER4", "AFTER5", "AFTER6", "AFTER7", "AFTER8", "AFTER9", "AFTE0", "AFTE1", "AFTE2", "AFTE3", "AFTE4", "AFTE5", "AFTE6", "AFTE7", "AFTE8", "AFTE9", "AFT0", "AFT1", "AFT2", "AFT3", "AFT4", "AFT5", "AFT6", "AFT7", "AFT8", "AFT9", "AF0", "AF1", "AF2", "AF3", "AF4", "AF5", "AF6", "AF7", "AF8", "AF9", "A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9"})
	test("WHAT ARE YOU DOING", []string{"WHAT ARE YOU DOING0", "WHAT ARE YOU DOING1", "WHAT ARE YOU DOING2", "WHAT ARE YOU DOING3", "WHAT ARE YOU DOING4", "WHAT ARE YOU DOING5", "WHAT ARE YOU DOING6", "WHAT ARE YOU DOING7", "WHAT ARE YOU DOING8", "WHAT ARE YOU DOING9", "WHAT ARE YOU DOIN0", "WHAT ARE YOU DOIN1", "WHAT ARE YOU DOIN2", "WHAT ARE YOU DOIN3", "WHAT ARE YOU DOIN4", "WHAT ARE YOU DOIN5", "WHAT ARE YOU DOIN6", "WHAT ARE YOU DOIN7", "WHAT ARE YOU DOIN8", "WHAT ARE YOU DOIN9", "WHAT ARE YOU DOI0", "WHAT ARE YOU DOI1", "WHAT ARE YOU DOI2", "WHAT ARE YOU DOI3", "WHAT ARE YOU DOI4", "WHAT ARE YOU DOI5", "WHAT ARE YOU DOI6", "WHAT ARE YOU DOI7", "WHAT ARE YOU DOI8", "WHAT ARE YOU DOI9", "WHAT ARE YOU DO0", "WHAT ARE YOU DO1", "WHAT ARE YOU DO2", "WHAT ARE YOU DO3", "WHAT ARE YOU DO4", "WHAT ARE YOU DO5", "WHAT ARE YOU DO6", "WHAT ARE YOU DO7", "WHAT ARE YOU DO8", "WHAT ARE YOU DO9", "WHAT ARE YOU D0", "WHAT ARE YOU D1", "WHAT ARE YOU D2", "WHAT ARE YOU D3", "WHAT ARE YOU D4", "WHAT ARE YOU D5", "WHAT ARE YOU D6", "WHAT ARE YOU D7", "WHAT ARE YOU D8", "WHAT ARE YOU D9", "WHAT ARE YOU 0", "WHAT ARE YOU 1", "WHAT ARE YOU 2", "WHAT ARE YOU 3", "WHAT ARE YOU 4", "WHAT ARE YOU 5", "WHAT ARE YOU 6", "WHAT ARE YOU 7", "WHAT ARE YOU 8", "WHAT ARE YOU 9", "WHAT ARE YOU0", "WHAT ARE YOU1", "WHAT ARE YOU2", "WHAT ARE YOU3", "WHAT ARE YOU4", "WHAT ARE YOU5", "WHAT ARE YOU6", "WHAT ARE YOU7", "WHAT ARE YOU8", "WHAT ARE YOU9", "WHAT ARE YO0", "WHAT ARE YO1", "WHAT ARE YO2", "WHAT ARE YO3", "WHAT ARE YO4", "WHAT ARE YO5", "WHAT ARE YO6", "WHAT ARE YO7", "WHAT ARE YO8", "WHAT ARE YO9", "WHAT ARE Y0", "WHAT ARE Y1", "WHAT ARE Y2", "WHAT ARE Y3", "WHAT ARE Y4", "WHAT ARE Y5", "WHAT ARE Y6", "WHAT ARE Y7", "WHAT ARE Y8", "WHAT ARE Y9", "WHAT ARE 0", "WHAT ARE 1", "WHAT ARE 2", "WHAT ARE 3", "WHAT ARE 4", "WHAT ARE 5", "WHAT ARE 6", "WHAT ARE 7", "WHAT ARE 8", "WHAT ARE 9", "WHAT ARE0", "WHAT ARE1", "WHAT ARE2", "WHAT ARE3", "WHAT ARE4", "WHAT ARE5", "WHAT ARE6", "WHAT ARE7", "WHAT ARE8", "WHAT ARE9", "WHAT AR0", "WHAT AR1", "WHAT AR2", "WHAT AR3", "WHAT AR4", "WHAT AR5", "WHAT AR6", "WHAT AR7", "WHAT AR8", "WHAT AR9", "WHAT A0", "WHAT A1", "WHAT A2", "WHAT A3", "WHAT A4", "WHAT A5", "WHAT A6", "WHAT A7", "WHAT A8", "WHAT A9", "WHAT 0", "WHAT 1", "WHAT 2", "WHAT 3", "WHAT 4", "WHAT 5", "WHAT 6", "WHAT 7", "WHAT 8", "WHAT 9", "WHAT0", "WHAT1", "WHAT2", "WHAT3", "WHAT4", "WHAT5", "WHAT6", "WHAT7", "WHAT8", "WHAT9", "WHA0", "WHA1", "WHA2", "WHA3", "WHA4", "WHA5", "WHA6", "WHA7", "WHA8", "WHA9", "WH0", "WH1", "WH2", "WH3", "WH4", "WH5", "WH6", "WH7", "WH8", "WH9", "W0", "W1", "W2", "W3", "W4", "W5", "W6", "W7", "W8", "W9"})
}

func assert(x bool) {
	if !x {
		panic("assertion failed")
	}
}

func test(s string, r []string) {
	p := invalid(s)
	fmt.Println(p)
	assert(reflect.DeepEqual(p, r))
}

func invalid(s string) []string {
	r := []string{}
	n := len(s)
	for i := range n {
		for j := range 10 {
			t := fmt.Sprintf("%s%d", s[:n-i], j)
			r = append(r, t)
		}
	}
	return r
}
