#!/usr/bin/env python3

"""

A Sophie Germain prime is a prime p such that 2p+1 is prime as well. For example, 11 is a Sophie Germain prime because 23 is prime as well. Write the shortest program to calculate Sophie Germain primes in ascending order

Rules
The Sophie Germain primes must be generated by your program, not from an external source.
Your program must calculate all Sophie Germain primes under 2^32-1
You must print each distinct Sophie Germain prime your program finds.
The person with the lowest score wins

Scoring
2 points per byte of your code
-10 if you can show a prime generated by your program greater than 2^32-1

"""

from sympy import *

# https://oeis.org/A005384
def sgprimes(n):
    r = []
    for i in range(n+1):
        if isprime(i) and isprime(2*i + 1):
            r.append(i)
    return r

def main():
    tab = [2, 3, 5, 11, 23, 29, 41, 53, 83, 89, 113, 131, 173, 179, 191, 233, 239, 251, 281, 293, 359, 419, 431, 443, 491, 509, 593, 641, 653, 659, 683, 719, 743, 761, 809, 911, 953, 1013, 1019, 1031, 1049, 1103, 1223, 1229, 1289, 1409, 1439, 1451, 1481, 1499, 1511, 1559]

    assert(sgprimes(tab[-1]) == tab)

main()
