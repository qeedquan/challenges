#!/bin/bc

# The one-dimensional simple cellular automata [Rule 110] (http://en.wikipedia.org/wiki/Rule_110) is the only such cellular automata
# currently known to be turing-complete, and many people say it is the simplest known turing-complete system.
# Implement a program capable of outputting an ascii-art representation of applying Rule 110 to some initial state.
# How many iterations and what your initial state is is up to you!
#
# You may chose to implement rule 124 instead if you like (which is the same thing, albeit backwards).
#
# Bonus points if your program can take an arbitrary rule integer from 0-255 as input and run that rule instead!

define rule110(n) {
	"P1 "; n; n
	
	p[1] = 1
	f = 0
	for (y = 0; y < n ; y++) {
		for (x = 1; x <= n; x++) {
			p[x]
			w = f*4 + p[x]*2 + p[x+1]
			f = p[x]
			p[x] = (w > 1 && w < 7)
		}
	}
}

rule110(640)
halt
