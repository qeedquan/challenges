/*

Description

Boudreaux and Thibodeaux aren't very good at math, so they need you to write a program that can determine the second degree polynomial used to generate a given sequence of three integers. As proof that you've figured out the polynomial, they want your program to print out the next 3 integers in the sequence.

You know that each sequence is generated by a polynomial of the form f(x) = Ax2 + Bx + C, where A, B, and C are integers in the range (-103 <= (A, B, C) <= 103). You are given the values f(0), f(1), f(2) and are to determine the values f(3), f(4), f(5).

Input

Input to this problem will consist of a (non-empty) series of up to 100 data sets. Each data set will be formatted according to the following description, and there will be no blank lines separating data sets.

Each data set consists of a single line containing the space-separated integer values of the polynomial evaluated at 0, 1, and 2 (in that order). These values will be in the range (-103 <= (f(0), f(1), f(2)) <= 103).

Output

For each data set, there will be exactly one line of output containing the space-separated integer values of the polynomial evaluated at 3, 4, and 5 (in that order). These values will be in the range (-104 <= (f(3), f(4), f(5)) <= 104).

Sample Input

0 0 0
1 1 1
1 2 3
0 1 4
0 2 8

Sample Output

0 0 0
1 1 1
4 5 6
9 16 25
18 32 50

Source

South Central USA 2003

*/

package main

import "fmt"

func main() {
	test(0, 0, 0, 0, 0, 0)
	test(1, 1, 1, 1, 1, 1)
	test(1, 2, 3, 4, 5, 6)
	test(0, 1, 4, 9, 16, 25)
	test(0, 2, 8, 18, 32, 50)
}

func assert(x bool) {
	if !x {
		panic("assertion failed")
	}
}

func test(f0, f1, f2 float64, r3, r4, r5 int) {
	f3, f4, f5 := eval(f0, f1, f2)
	fmt.Println(f3, f4, f5)
	assert(f3 == r3)
	assert(f4 == r4)
	assert(f5 == r5)
}

func eval(f0, f1, f2 float64) (int, int, int) {
	c := f0
	b := (4*(f1-f0) - (f2 - f0)) / 2
	a := f1 - b - c
	f3 := 9*a + 3*b + c
	f4 := 16*a + 4*b + c
	f5 := 25*a + 5*b + c
	return int(f3), int(f4), int(f5)
}
